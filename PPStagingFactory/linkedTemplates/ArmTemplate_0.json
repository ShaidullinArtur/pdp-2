{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "PPStagingFactory"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"PPStaging_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'PPStaging'"
		},
		"PPStagingBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'PPStagingBlob'"
		},
		"1 Minute Sync Location Revenue_properties_SyncLocationRevenue_parameters_startTime": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		},
		"1MinuteSyncProviders_properties_SyncProviders_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		},
		"1MinuteSyncProviders_properties_SyncProviders_parameters_windowEnd": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PPStaging')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "PostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('PPStaging_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PPStagingBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('PPStagingBlob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/StagingAzureDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "created_at",
						"type": "datetime2",
						"scale": 6
					},
					{
						"name": "updated_at",
						"type": "datetime2",
						"scale": 6
					},
					{
						"name": "deleted_at",
						"type": "datetime2",
						"scale": 6
					},
					{
						"name": "profile_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "commission",
						"type": "float",
						"precision": 15
					},
					{
						"name": "transaction_type",
						"type": "varchar"
					},
					{
						"name": "slug",
						"type": "varchar"
					},
					{
						"name": "kind",
						"type": "varchar"
					},
					{
						"name": "auth_token",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "providers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StagingLocationRevenues')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PPStaging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "location_revenues"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PPStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StagingProviders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PPStaging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "providers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PPStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SyncLocationRevenue')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Location Revenue",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource",
								"query": {
									"value": "select * from location_revenues\nwhere updated_at between '@{addseconds(pipeline().parameters.startTime, -90)}'\nAND '@{pipeline().parameters.startTime}'\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[spUpsertLocationRevenue]",
								"sqlWriterTableType": "LocationRevenueType",
								"storedProcedureTableTypeParameterName": "location_revenue"
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"redirectIncompatibleRowSettings": {
								"linkedServiceName": {
									"referenceName": "PPStagingBlob",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int64"
										},
										"sink": {
											"name": "id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "order_number_id",
											"type": "Int64"
										},
										"sink": {
											"name": "order_number_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "DateTime"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "updated_at",
											"type": "DateTime"
										},
										"sink": {
											"name": "updated_at",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "deleted_at",
											"type": "DateTime"
										},
										"sink": {
											"name": "deleted_at",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "StagingLocationRevenues",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "StagingAzureDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"startTime": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StagingLocationRevenues')]",
				"[concat(variables('factoryId'), '/datasets/StagingAzureDB')]",
				"[concat(variables('factoryId'), '/linkedServices/PPStagingBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SyncProviders')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy providers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "public.cards"
							},
							{
								"name": "Destination",
								"value": "dbo.cards"
							}
						],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource",
								"query": {
									"value": "select * from providers\nwhere updated_at between '@{pipeline().parameters.windowStart}' AND '@{pipeline().parameters.windowEnd}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[spUpsertProvider]",
								"sqlWriterTableType": "ProviderType",
								"storedProcedureTableTypeParameterName": "provider"
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"redirectIncompatibleRowSettings": {
								"linkedServiceName": {
									"referenceName": "PPStagingBlob",
									"type": "LinkedServiceReference"
								}
							},
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int32"
										},
										"sink": {
											"name": "id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "DateTime"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "updated_at",
											"type": "DateTime"
										},
										"sink": {
											"name": "updated_at",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "deleted_at",
											"type": "DateTime"
										},
										"sink": {
											"name": "deleted_at",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "profile_id",
											"type": "Int32"
										},
										"sink": {
											"name": "profile_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "commission",
											"type": "Double"
										},
										"sink": {
											"name": "commission",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "transaction_type",
											"type": "String"
										},
										"sink": {
											"name": "transaction_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "slug",
											"type": "String"
										},
										"sink": {
											"name": "slug",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "kind",
											"type": "String"
										},
										"sink": {
											"name": "kind",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "auth_token",
											"type": "String"
										},
										"sink": {
											"name": "auth_token",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "StagingProviders",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "StagingAzureDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"windowStart": {
						"type": "string",
						"defaultValue": "@addseconds(trigger().scheduledTime, -90)"
					},
					"windowEnd": {
						"type": "string",
						"defaultValue": "@addseconds(trigger().scheduledTime, 1)"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StagingProviders')]",
				"[concat(variables('factoryId'), '/datasets/StagingAzureDB')]",
				"[concat(variables('factoryId'), '/linkedServices/PPStagingBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1 Minute Sync Location Revenue')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SyncLocationRevenue",
							"type": "PipelineReference"
						},
						"parameters": {
							"startTime": "[parameters('1 Minute Sync Location Revenue_properties_SyncLocationRevenue_parameters_startTime')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2019-09-13T12:30:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SyncLocationRevenue')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1MinuteSyncProviders')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SyncProviders",
							"type": "PipelineReference"
						},
						"parameters": {
							"windowStart": "[parameters('1MinuteSyncProviders_properties_SyncProviders_parameters_windowStart')]",
							"windowEnd": "[parameters('1MinuteSyncProviders_properties_SyncProviders_parameters_windowEnd')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2019-08-27T11:19:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SyncProviders')]"
			]
		}
	]
}