{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "PPStagingFactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SyncLocationRevenue')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Location Revenue",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource",
								"query": {
									"value": "select * from location_revenues\nwhere updated_at between '@{addseconds(pipeline().parameters.startTime, -90)}'\nAND '@{pipeline().parameters.startTime}'\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[spUpsertLocationRevenue]",
								"sqlWriterTableType": "LocationRevenueType",
								"storedProcedureTableTypeParameterName": "location_revenue"
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": true,
							"redirectIncompatibleRowSettings": {
								"linkedServiceName": {
									"referenceName": "PPStagingBlob",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int64"
										},
										"sink": {
											"name": "id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "order_number_id",
											"type": "Int64"
										},
										"sink": {
											"name": "order_number_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "DateTime"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "updated_at",
											"type": "DateTime"
										},
										"sink": {
											"name": "updated_at",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "deleted_at",
											"type": "DateTime"
										},
										"sink": {
											"name": "deleted_at",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "StagingLocationRevenues",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "StagingAzureDB",
								"type": "DatasetReference"
							}
						]
					}
				],
				"parameters": {
					"startTime": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/1 Minute Sync Location Revenue')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SyncLocationRevenue",
							"type": "PipelineReference"
						},
						"parameters": {
							"startTime": "@trigger().scheduledTime"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2019-09-13T12:30:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SyncLocationRevenue')]"
			]
		}
	]
}